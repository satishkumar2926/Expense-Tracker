<!doctype html>
<html lang="en"> 
<head> 
  <meta charset="UTF-8"> 
  <meta name="viewport" content="width=device-width, initial-scale=1.0"> 
  <title>Daily Expense Tracker</title> 
  <style>
    body {
      font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
      background: linear-gradient(135deg, rgba(0, 0, 0, 0.7), rgba(30, 30, 30, 0.8)),
                  url('https://images.unsplash.com/photo-1588776814546-ec7bba8a5790?ixlib=rb-4.0.3&auto=format&fit=crop&w=1350&q=80') no-repeat center center fixed;
      background-size: cover;
      color: #f5f5f5;
      margin: 0;
      padding: 20px;
    }

    .container {
      max-width: 600px;
      margin: auto;
      background: #2c2c2c;
      padding: 25px;
      border-radius: 15px;
      box-shadow: 0 0 25px rgba(255, 215, 0, 0.2); 
      border: 1px solid #444;
    }

    h1 {
      text-align: center;
      color: gold;
      margin-bottom: 20px;
      font-weight: 600;
    }

    form {
      display: flex;
      gap: 10px;
      margin-bottom: 20px;
      flex-wrap: wrap;
    }

    input[type="text"],
    input[type="number"] {
      flex: 1;
      padding: 12px;
      border: 1px solid #666;
      border-radius: 8px;
      background: #1e1e1e;
      color: #fff;
    }

    button {
      padding: 12px 18px;
      background: gold;
      color: #1a1a1a;
      border: none;
      border-radius: 8px;
      cursor: pointer;
      font-weight: bold;
      transition: background 0.3s ease;
    }

    button:hover {
      background: #e6c200;
    }

    #daily-summary {
      margin-top: 20px;
    }

    .expense-item {
      display: flex;
      justify-content: space-between;
      align-items: center;
      margin-bottom: 15px;
      border-bottom: 1px solid #444;
      padding-bottom: 8px;
      flex-wrap: wrap;
      background: rgba(255, 255, 255, 0.03);
      border-radius: 10px;
      padding: 10px;
    }

    .expense-details {
      flex: 1;
    }

    .modified {
      font-weight: bold;
      color: gold;
    }

    footer {
      text-align: center;
      margin-top: 40px;
      font-size: 0.9em;
      color: #aaa;
    }
  </style>
</head> 
<body> 
  <div class="container"> 
    <h1>Daily Expense Tracker (₹)</h1> 
    <form id="expense-form"> 
      <input type="text" id="expense-name" placeholder="Expense Name" required> 
      <input type="number" id="expense-amount" placeholder="Amount (₹)" required> 
      <button type="submit">Add Expense</button> 
    </form> 
    <div id="daily-summary"></div> 
  </div> 

  <footer>© 2025 U.K. Satishkumar. All rights reserved.</footer> 

  <script>
    const form = document.getElementById('expense-form');
    const nameInput = document.getElementById('expense-name');
    const amountInput = document.getElementById('expense-amount');
    const summary = document.getElementById('daily-summary');

    let expenses = JSON.parse(localStorage.getItem("daily_expenses")) || [];

    function formatTime(timestamp) {
      const date = new Date(timestamp);
      return date.toLocaleString('en-IN');
    }

    function renderExpenses() {
      summary.innerHTML = "";
      let total = 0;

      expenses.forEach((expense, index) => {
        total += parseFloat(expense.amount);

        const div = document.createElement('div');
        div.className = 'expense-item';

        div.innerHTML = `
          <div class="expense-details ${expense.modified ? 'modified' : ''}">
            ${expense.name} — ₹${expense.amount} <br>
            <small>${formatTime(expense.time)}</small>
          </div>
          <div>
            <button onclick="editExpense(${index})">Edit</button>
            <button onclick="deleteExpense(${index})">Delete</button>
          </div>
        `;

        summary.appendChild(div);
      });

      const totalDiv = document.createElement('div');
      totalDiv.style.fontWeight = "bold";
      totalDiv.innerText = `Total: ₹${total.toFixed(2)}`;
      summary.appendChild(totalDiv);

      localStorage.setItem("daily_expenses", JSON.stringify(expenses));
    }

    function editExpense(index) {
      const newName = prompt("Edit expense name:", expenses[index].name);
      const newAmount = prompt("Edit amount (₹):", expenses[index].amount);
      if (newName && newAmount && !isNaN(newAmount)) {
        expenses[index] = {
          ...expenses[index],
          name: newName,
          amount: parseFloat(newAmount).toFixed(2),
          time: new Date().toISOString(),
          modified: true
        };
        renderExpenses();
      }
    }

    function deleteExpense(index) {
      if (confirm("Are you sure you want to delete this expense?")) {
        expenses.splice(index, 1);
        renderExpenses();
      }
    }

    form.addEventListener('submit', (e) => {
      e.preventDefault();
      const name = nameInput.value.trim();
      const amount = parseFloat(amountInput.value.trim());

      if (name && !isNaN(amount)) {
        expenses.push({
          name,
          amount: amount.toFixed(2),
          time: new Date().toISOString(),
          modified: false
        });
        nameInput.value = "";
        amountInput.value = "";
        renderExpenses();
      }
    });

    renderExpenses();
  </script>
</body>
</html>
